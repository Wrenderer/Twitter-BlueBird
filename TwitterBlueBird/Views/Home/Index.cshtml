@model TwitterBlueBird.ViewModels.IndexViewModel

@section Scripts
{
	<script>
		// With slightly more time, easy refactor: add constant url or add url to
		// data attributes on buttons to allow javascript to be put in a
		// non-razor file.

		function rateTweet(action, tweet) {
			$.ajax({
				url: action,
				type: "POST",
				data: { id: $(tweet.target).data("id") },
				cache: false,
				async: true,
				success: function (data) {
					$("#" + data).fadeOut(300, function () {
						$("#" + data).remove();
						$('.RateAngryBtn, .RateHappyBtn').removeClass('disabled');
					});
				}
			});
		}

		$('.RateHappyBtn').click(function (tweet) {
			if ($(tweet.target).hasClass('disabled')) return;
			$('.RateAngryBtn, .RateHappyBtn').addClass('disabled');
			rateTweet('@(Url.Action("RateHappy", "Tweets"))', tweet);
		});

		$('.RateAngryBtn').click(function (tweet) {
			if ($(tweet.target).hasClass('disabled')) return;
			$('.RateAngryBtn, .RateHappyBtn').addClass('disabled');
			rateTweet('@(Url.Action("RateAngry", "Tweets"))', tweet);
		});

		$('#newTweetButton').click(function (tweet) {
			$.ajax({
				type: "POST",
				url: "/twitter.svc/GetTweets",
				contentType: "application/json",
				data: '{"amount": "1"}',
				dataType: "json",
				success: function (result) {
					$.each(result.d, function (index, value) {
						$('#single-random-tweet-text').text(value);
					});
				},
				error: function (textStatus) {
					$('#single-random-tweet-card').addClass('card-warning').removeClass('card-primary');
					$('#single-random-tweet-text').text('An error has occurred: '+ textStatus.statusText);
				}
			});
		});
	</script>
}

@{
	ViewBag.Title = "Twitter BlueBird";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="mt-3">Rate these Tweets!</h2>

<table class="table">
	@foreach (var item in Model.RatableTweets)
	{
		<tr id="@item.Id">
			<td>
				@Html.DisplayFor(modelItem => item.Text)
			</td>
			<td>
				<div class="btn-group">
					<button data-id="@item.Id" class="btn btn-outline-success RateHappyBtn">Happy</button>
					<button data-id="@item.Id" class="btn btn-outline-danger RateAngryBtn">Angry</button>
				</div>
			</td>
		</tr>
	}
</table>

<button id="newTweetButton" class="btn btn-primary">Get New Random Tweet</button>
<div id="single-random-tweet-card" class="card card-inverse card-primary mb-3 mt-3 text-center">
	<div class="card-block">
		<blockquote class="card-blockquote">
			<p id="single-random-tweet-text">
				
			</p>
			
		</blockquote>
	</div>
</div>

<div class="container-fluid">
	<div class="row">
		<div class="col-md-6">
			<h1 class="mb-3">Top 10 Happy Words</h1>

			<ul class="list-group">
				@foreach (var item in Model.TopHappyWords)
				{
					<li class="list-group-item list-group-item-action list-group-item-success justify-content-between">
						<span>@item.Text</span>
						<span class="badge badge-default badge-pill">@item.HappyCount</span>
					</li>
				}
			</ul>
		</div>
		<div class="col-md-6">
			<h1 class="mb-3">Top 10 Angry Words</h1>

			<ul class="list-group">
				@foreach (var item in Model.TopAngryWords)
				{
					<li class="list-group-item list-group-item-action list-group-item-danger justify-content-between">
						<span>@item.Text</span>
						<span class="badge badge-default badge-pill">@item.AngryCount</span>
					</li>
				}
			</ul>
		</div>
	</div>
</div>